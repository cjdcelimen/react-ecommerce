[{"C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\index.js":"1","C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\App.js":"2","C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\components\\Products\\Products.jsx":"3","C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\components\\Products\\Product\\Product.jsx":"4","C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\components\\Products\\Product\\styles.js":"5","C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\components\\Navbar\\Navbar.jsx":"6","C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\components\\Navbar\\styles.js":"7","C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\components\\index.js":"8","C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\components\\Products\\styles.js":"9","C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\lib\\commerce.js":"10","C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\components\\Cart\\Cart.jsx":"11","C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\components\\Cart\\styles.js":"12","C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\components\\Cart\\CartItem\\CartItem.jsx":"13","C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\components\\Cart\\CartItem\\styles.js":"14","C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"15","C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\components\\CheckoutForm\\Checkout\\styles.js":"16","C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\components\\CheckoutForm\\PaymentForm.jsx":"17","C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\components\\CheckoutForm\\AddressForm.jsx":"18","C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\components\\CheckoutForm\\CustomTextField.jsx":"19","C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\components\\CheckoutForm\\Review.jsx":"20"},{"size":148,"mtime":1606998994249,"results":"21","hashOfConfig":"22"},{"size":2850,"mtime":1607731191480,"results":"23","hashOfConfig":"22"},{"size":734,"mtime":1607205380394,"results":"24","hashOfConfig":"22"},{"size":1331,"mtime":1607206978527,"results":"25","hashOfConfig":"22"},{"size":413,"mtime":1607035917720,"results":"26","hashOfConfig":"22"},{"size":1463,"mtime":1607730185286,"results":"27","hashOfConfig":"22"},{"size":1659,"mtime":1607327068421,"results":"28","hashOfConfig":"22"},{"size":233,"mtime":1607382194785,"results":"29","hashOfConfig":"22"},{"size":298,"mtime":1607081982928,"results":"30","hashOfConfig":"22"},{"size":127,"mtime":1607127044159,"results":"31","hashOfConfig":"22"},{"size":2353,"mtime":1607381641543,"results":"32","hashOfConfig":"22"},{"size":597,"mtime":1607207089251,"results":"33","hashOfConfig":"22"},{"size":1354,"mtime":1607328336783,"results":"34","hashOfConfig":"22"},{"size":349,"mtime":1607209247477,"results":"35","hashOfConfig":"22"},{"size":2457,"mtime":1607731079132,"results":"36","hashOfConfig":"22"},{"size":1208,"mtime":1607382103634,"results":"37","hashOfConfig":"22"},{"size":2883,"mtime":1607731401426,"results":"38","hashOfConfig":"22"},{"size":4681,"mtime":1607584413571,"results":"39","hashOfConfig":"22"},{"size":571,"mtime":1607469105709,"results":"40","hashOfConfig":"22"},{"size":1113,"mtime":1607554786928,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"8uwb7y",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\index.js",[],["86","87"],"C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\App.js",[],"C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\components\\Products\\Products.jsx",[],"C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\components\\Products\\Product\\Product.jsx",[],"C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\components\\Products\\Product\\styles.js",[],"C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\components\\Navbar\\Navbar.jsx",["88","89","90"],"import React from 'react';\r\nimport { AppBar, Toolbar, IconButton, Badge, MenuItem, Menu, Typography } from '@material-ui/core';\r\nimport { ShoppingCart } from '@material-ui/icons';\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport logo from '../../assets/logo.png';\r\nimport useStyles from './styles';\r\n\r\nconst Navbar = ({ totalItems }) => {\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <>\r\n            <AppBar position='fixed' className={classes.appBar} color='inherit'>\r\n                <Toolbar>\r\n                    <Typography component={Link} to='/' variant='h6' className={classes.title} color='inherit'>\r\n                        {/* <img src={logo} alt='Commerce.js' height='25px' className={classes.image} /> */}\r\n                        eCommerce\r\n                    </Typography>\r\n                    <div className={classes.grow} />\r\n                    {location.pathname === '/' && (\r\n                    <div className={classes.button}>\r\n                        <IconButton component={Link} to='/cart' aria-label='Show cart items' color='inherit'>\r\n                            <Badge badgeContent={totalItems} color='secondary'>\r\n                                <ShoppingCart />\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </div>)}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\components\\Navbar\\styles.js",[],"C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\components\\index.js",[],"C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\components\\Products\\styles.js",[],"C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\lib\\commerce.js",[],"C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\components\\Cart\\Cart.jsx",[],"C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\components\\Cart\\styles.js",[],"C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\components\\Cart\\CartItem\\styles.js",[],"C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",["91","92","93"],"import React, { useState, useEffect } from 'react'\r\nimport { Paper, Stepper, Step, StepLabel, Typography, CircularProgress, Divider, Button } from '@material-ui/core';\r\nimport useStyles from './styles';\r\nimport AddressForm from '../AddressForm';\r\nimport PaymentForm from '../PaymentForm';\r\nimport { commerce } from '../../../lib/commerce';\r\n\r\nconst steps = ['Shipping address', 'Payment details']\r\n\r\nconst Checkout = ({ cart, order, onCaptureCheckout, error }) => {\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [checkoutToken, setCheckoutToken] = useState(null);\r\n    const [shippingData, setShippingData] = useState({});\r\n    const classes = useStyles();\r\n\r\n    const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n\r\n    useEffect(() => {\r\n        if (cart.id) {\r\n        const generateToken = async () => {\r\n            try {\r\n            const token = await commerce.checkout.generateToken(cart.id, { type: 'cart' });\r\n            setCheckoutToken(token);\r\n            } catch {\r\n\r\n            }\r\n        };\r\n\r\n        generateToken();\r\n        }\r\n    }, [cart]);\r\n\r\n    const next = (data) => {\r\n        setShippingData(data);\r\n        nextStep();\r\n    }\r\n\r\n    const Confirmation = () => (\r\n        <div>\r\n            Confirmation\r\n        </div>\r\n    )\r\n\r\n    const Form = () => activeStep === 0 \r\n        ? <AddressForm checkoutToken={checkoutToken} next={next} />\r\n        : <PaymentForm shippingData={shippingData} checkoutToken={checkoutToken} backStep={backStep} onCaptureCheckout={onCaptureCheckout} nextStep={nextStep} />\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.toolbar} />\r\n            <main className={classes.layout}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant='h4' align='center'>Checkout</Typography>\r\n                    <Stepper activeStep={activeStep} className={classes.stepper}>\r\n                        {steps.map((step) => (\r\n                            <Step key={step}>\r\n                                <StepLabel>{step}</StepLabel>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                    {activeStep === steps.length ? <Confirmation /> : checkoutToken && <Form />}\r\n                </Paper>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Checkout\r\n","C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\components\\CheckoutForm\\Checkout\\styles.js",[],"C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\components\\CheckoutForm\\PaymentForm.jsx",[],"C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\components\\CheckoutForm\\AddressForm.jsx",["94","95"],"import React, { useState, useEffect } from 'react';\r\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { commerce } from '../../lib/commerce';\r\nimport CustomTextField from './CustomTextField';\r\n\r\nconst AddressForm = ({ checkoutToken, next }) => {\r\n  const [shippingCountries, setShippingCountries] = useState([]);\r\n  const [shippingCountry, setShippingCountry] = useState('');\r\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n  const [shippingSubdivision, setShippingSubdivision] = useState('');\r\n  const [shippingOptions, setShippingOptions] = useState([]);\r\n  const [shippingOption, setShippingOption] = useState('');\r\n  const methods = useForm();\r\n\r\n  const fetchShippingCountries = async (checkoutTokenId) => {\r\n    const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\r\n\r\n    setShippingCountries(countries);\r\n    setShippingCountry(Object.keys(countries)[0]);\r\n  };\r\n\r\n  const fetchSubdivisions = async (countryCode) => {\r\n    const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\r\n\r\n    setShippingSubdivisions(subdivisions);\r\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n  };\r\n\r\n  const fetchShippingOptions = async (checkoutTokenId, country, stateProvince = null) => {\r\n    const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region: stateProvince });\r\n\r\n    setShippingOptions(options);\r\n    setShippingOption(options[0].id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchShippingCountries(checkoutToken.id);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\r\n  }, [shippingCountry]);\r\n\r\n  useEffect(() => {\r\n    if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\r\n  }, [shippingSubdivision]);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\r\n      <FormProvider {...methods}>\r\n        <form onSubmit={methods.handleSubmit((data) => next({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\r\n          <Grid container spacing={3}>\r\n            <CustomTextField name=\"firstName\" label=\"First name\" />\r\n            <CustomTextField name=\"lastName\" label=\"Last name\" />\r\n            <CustomTextField name=\"address1\" label=\"Address line 1\" />\r\n            <CustomTextField name=\"email\" label=\"Email\" />\r\n            <CustomTextField name=\"city\" label=\"City\" />\r\n            <CustomTextField name=\"zip\" label=\"Zip / Postal code\" />\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Country</InputLabel>\r\n              <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                {Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Subdivision</InputLabel>\r\n              <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n                {Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Options</InputLabel>\r\n              <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\r\n                {shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Button component={Link} variant=\"outlined\" to=\"/cart\">Back to Cart</Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\r\n          </div>\r\n        </form>\r\n      </FormProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddressForm;","C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\components\\CheckoutForm\\CustomTextField.jsx",[],"C:\\Users\\ZG CELIMEN\\react-ecommerce\\src\\components\\CheckoutForm\\Review.jsx",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":2,"column":46,"nodeType":"102","messageId":"103","endLine":2,"endColumn":54},{"ruleId":"100","severity":1,"message":"104","line":2,"column":56,"nodeType":"102","messageId":"103","endLine":2,"endColumn":60},{"ruleId":"100","severity":1,"message":"105","line":5,"column":8,"nodeType":"102","messageId":"103","endLine":5,"endColumn":12},{"ruleId":"100","severity":1,"message":"106","line":2,"column":55,"nodeType":"102","messageId":"103","endLine":2,"endColumn":71},{"ruleId":"100","severity":1,"message":"107","line":2,"column":73,"nodeType":"102","messageId":"103","endLine":2,"endColumn":80},{"ruleId":"100","severity":1,"message":"108","line":2,"column":82,"nodeType":"102","messageId":"103","endLine":2,"endColumn":88},{"ruleId":"109","severity":1,"message":"110","line":40,"column":6,"nodeType":"111","endLine":40,"endColumn":8,"suggestions":"112"},{"ruleId":"109","severity":1,"message":"113","line":48,"column":6,"nodeType":"111","endLine":48,"endColumn":27,"suggestions":"114"},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","'logo' is defined but never used.","'CircularProgress' is defined but never used.","'Divider' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.","ArrayExpression",["117"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["118"],"no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"123","text":"124"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"125","text":"126"},[1712,1714],"[checkoutToken.id]",[1965,1986],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]